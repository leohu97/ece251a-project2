C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Yvette 
                    -Wang\SimplicityStudio\v4_workspace\EFM8BB3_RainbowBlinky_2 2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) W
                    -ARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/SiliconLabs/Simpli
                    -cityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;C:/SiliconLabs/SimplicityStudio/v4/developer
                    -/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;C:\Users\Yvette Wang\SimplicityStudio\v4_workspace\EFM8BB3_RainbowBlin
                    -ky_2 2\inc\config;C:\Users\Yvette Wang\SimplicityStudio\v4_workspace\EFM8BB3_RainbowBlinky_2 2\inc;C:/SiliconLabs/Simpli
                    -cityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C:/SiliconLabs/SimplicityStudio/v4/develo
                    -per/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers
                    -/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/
                    -inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphi
                    -cs;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStud
                    -io/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJ
                    -ECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          //=========================================================
   3          // src/InitDevice.c: generated by Hardware Configurator
   4          //
   5          // This file will be regenerated when saving a document.
   6          // leave the sections inside the "$[...]" comment tags alone
   7          // or they will be overwritten!
   8          //=========================================================
   9          
  10          // USER INCLUDES
  11          #include <SI_EFM8BB3_Register_Enums.h>
  12          #include "InitDevice.h"
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PBCFG_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_3_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              PCA_0_enter_DefaultMode_from_RESET();
  37   1              PCACH_0_enter_DefaultMode_from_RESET();
  38   1              PCACH_1_enter_DefaultMode_from_RESET();
  39   1              PCACH_2_enter_DefaultMode_from_RESET();
  40   1              SPI_0_enter_DefaultMode_from_RESET();
  41   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  42   1              // Restore the SFRPAGE
  43   1              SFRPAGE = SFRPAGE_save;
  44   1              // [Config Calls]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 2   

  45   1      
  46   1      }
  47          
  48          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  49   1              // $[WDTCN - Watchdog Timer Control]
  50   1              SFRPAGE = 0x00;
  51   1              //Disable Watchdog with key sequence
  52   1              WDTCN = 0xDE; //First key
  53   1              WDTCN = 0xAD; //Second key
  54   1              // [WDTCN - Watchdog Timer Control]$
  55   1      
  56   1      }
  57          
  58          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
  59   1              // $[HFOSC1 Setup]
  60   1              // [HFOSC1 Setup]$
  61   1      
  62   1              // $[CLKSEL - Clock Select]
  63   1              /***********************************************************************
  64   1               - Clock derived from the Internal High Frequency Oscillator 0
  65   1               - SYSCLK is equal to selected clock source divided by 1
  66   1               ***********************************************************************/
  67   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
  68   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
  69   1                      ;
  70   1              // [CLKSEL - Clock Select]$
  71   1      
  72   1      }
  73          
  74          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
  75   1              // $[SPI0CKR - SPI0 Clock Rate]
  76   1              /***********************************************************************
  77   1               - SPI0 Clock Rate = 0x0B
  78   1               ***********************************************************************/
  79   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
  80   1              // [SPI0CKR - SPI0 Clock Rate]$
  81   1      
  82   1              // $[SPI0CFG - SPI0 Configuration]
  83   1              /***********************************************************************
  84   1               - Enable master mode. Operate as a master
  85   1               ***********************************************************************/
  86   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
  87   1              // [SPI0CFG - SPI0 Configuration]$
  88   1      
  89   1              // $[SPI0PCF - SPI0 Pin Configuration]
  90   1              // [SPI0PCF - SPI0 Pin Configuration]$
  91   1      
  92   1              // $[SPI0CN0 - SPI0 Control]
  93   1              /***********************************************************************
  94   1               - Enable the SPI module
  95   1               - 3-Wire Slave or 3-Wire Master Mode
  96   1               ***********************************************************************/
  97   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
  98   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
  99   1              // [SPI0CN0 - SPI0 Control]$
 100   1      
 101   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 102   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 103   1      
 104   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 105   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 106   1      
 107   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 3   

 108          
 109          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 110   1              // $[EIE1 - Extended Interrupt Enable 1]
 111   1              /***********************************************************************
 112   1               - Disable ADC0 Conversion Complete interrupt
 113   1               - Disable ADC0 Window Comparison interrupt
 114   1               - Disable CP0 interrupts
 115   1               - Disable CP1 interrupts
 116   1               - Enable interrupt requests generated by a Port Match
 117   1               - Disable all PCA0 interrupts
 118   1               - Disable all SMB0 interrupts
 119   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 120   1               ***********************************************************************/
 121   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 122   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 123   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 124   1              // [EIE1 - Extended Interrupt Enable 1]$
 125   1      
 126   1              // $[EIE2 - Extended Interrupt Enable 2]
 127   1              // [EIE2 - Extended Interrupt Enable 2]$
 128   1      
 129   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 130   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 131   1      
 132   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 133   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 134   1      
 135   1              // $[EIP2 - Extended Interrupt Priority 2]
 136   1              // [EIP2 - Extended Interrupt Priority 2]$
 137   1      
 138   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 139   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 140   1      
 141   1              // $[IE - Interrupt Enable]
 142   1              /***********************************************************************
 143   1               - Disable all interrupt sources
 144   1               - Disable external interrupt 0
 145   1               - Disable external interrupt 1
 146   1               - Enable interrupt requests generated by SPI0
 147   1               - Enable interrupt requests generated by the TF0 flag
 148   1               - Disable all Timer 1 interrupt
 149   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 150   1               - Disable UART0 interrupt
 151   1               ***********************************************************************/
 152   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 153   1                              | IE_ESPI0__ENABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 154   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 155   1              // [IE - Interrupt Enable]$
 156   1      
 157   1              // $[IP - Interrupt Priority]
 158   1              // [IP - Interrupt Priority]$
 159   1      
 160   1              // $[IPH - Interrupt Priority High]
 161   1              // [IPH - Interrupt Priority High]$
 162   1      
 163   1      }
 164          
 165          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 166   1              // $[XBR2 - Port I/O Crossbar 2]
 167   1              /***********************************************************************
 168   1               - Weak Pullups enabled 
 169   1               - Crossbar enabled
 170   1               - UART1 I/O unavailable at Port pin
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 4   

 171   1               - UART1 RTS1 unavailable at Port pin
 172   1               - UART1 CTS1 unavailable at Port pin
 173   1               ***********************************************************************/
 174   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 175   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 176   1                              | XBR2_URT1CTSE__DISABLED;
 177   1              // [XBR2 - Port I/O Crossbar 2]$
 178   1      
 179   1              // $[PRTDRV - Port Drive Strength]
 180   1              // [PRTDRV - Port Drive Strength]$
 181   1      
 182   1              // $[XBR0 - Port I/O Crossbar 0]
 183   1              /***********************************************************************
 184   1               - UART0 I/O unavailable at Port pin
 185   1               - SPI I/O routed to Port pins
 186   1               - SMBus 0 I/O unavailable at Port pins
 187   1               - CP0 unavailable at Port pin
 188   1               - Asynchronous CP0 unavailable at Port pin
 189   1               - CP1 unavailable at Port pin
 190   1               - Asynchronous CP1 unavailable at Port pin
 191   1               - SYSCLK unavailable at Port pin
 192   1               ***********************************************************************/
 193   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 194   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 195   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 196   1              // [XBR0 - Port I/O Crossbar 0]$
 197   1      
 198   1              // $[XBR1 - Port I/O Crossbar 1]
 199   1              /***********************************************************************
 200   1               - CEX0, CEX1, CEX2 routed to Port pins
 201   1               - ECI unavailable at Port pin
 202   1               - T0 unavailable at Port pin
 203   1               - T1 unavailable at Port pin
 204   1               - T2 unavailable at Port pin
 205   1               ***********************************************************************/
 206   1              XBR1 = XBR1_PCA0ME__CEX0_TO_CEX2 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 207   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 208   1              // [XBR1 - Port I/O Crossbar 1]$
 209   1      
 210   1      }
 211          
 212          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 213   1              // $[Timer Initialization]
 214   1              // Save Timer Configuration
 215   1              uint8_t TMR3CN0_TR3_save;
 216   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 217   1              // Stop Timer
 218   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 219   1              // [Timer Initialization]$
 220   1      
 221   1              // $[TMR3CN1 - Timer 3 Control 1]
 222   1              // [TMR3CN1 - Timer 3 Control 1]$
 223   1      
 224   1              // $[TMR3CN0 - Timer 3 Control]
 225   1              // [TMR3CN0 - Timer 3 Control]$
 226   1      
 227   1              // $[TMR3H - Timer 3 High Byte]
 228   1              /***********************************************************************
 229   1               - Timer 3 High Byte = 0xF8
 230   1               ***********************************************************************/
 231   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 232   1              // [TMR3H - Timer 3 High Byte]$
 233   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 5   

 234   1              // $[TMR3L - Timer 3 Low Byte]
 235   1              /***********************************************************************
 236   1               - Timer 3 Low Byte = 0x06
 237   1               ***********************************************************************/
 238   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 239   1              // [TMR3L - Timer 3 Low Byte]$
 240   1      
 241   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 242   1              /***********************************************************************
 243   1               - Timer 3 Reload High Byte = 0xF8
 244   1               ***********************************************************************/
 245   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 246   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 247   1      
 248   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 249   1              /***********************************************************************
 250   1               - Timer 3 Reload Low Byte = 0x06
 251   1               ***********************************************************************/
 252   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 253   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 254   1      
 255   1              // $[TMR3CN0]
 256   1              /***********************************************************************
 257   1               - Start Timer 3 running
 258   1               ***********************************************************************/
 259   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 260   1              // [TMR3CN0]$
 261   1      
 262   1              // $[Timer Restoration]
 263   1              // Restore Timer Configuration
 264   1              TMR3CN0 |= TMR3CN0_TR3_save;
 265   1              // [Timer Restoration]$
 266   1      
 267   1      }
 268          
 269          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 270   1              // $[Timer Initialization]
 271   1              //Save Timer Configuration
 272   1              uint8_t TCON_save;
 273   1              TCON_save = TCON;
 274   1              //Stop Timers
 275   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 276   1      
 277   1              // [Timer Initialization]$
 278   1      
 279   1              // $[TH0 - Timer 0 High Byte]
 280   1              // [TH0 - Timer 0 High Byte]$
 281   1      
 282   1              // $[TL0 - Timer 0 Low Byte]
 283   1              // [TL0 - Timer 0 Low Byte]$
 284   1      
 285   1              // $[TH1 - Timer 1 High Byte]
 286   1              // [TH1 - Timer 1 High Byte]$
 287   1      
 288   1              // $[TL1 - Timer 1 Low Byte]
 289   1              // [TL1 - Timer 1 Low Byte]$
 290   1      
 291   1              // $[Timer Restoration]
 292   1              //Restore Timer Configuration
 293   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 294   1      
 295   1              // [Timer Restoration]$
 296   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 6   

 297   1      }
 298          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 299   1              // $[CKCON0 - Clock Control 0]
 300   1              /***********************************************************************
 301   1               - System clock divided by 48
 302   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 303   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 304   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 305   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 306   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 307   1               - Timer 1 uses the system clock
 308   1               ***********************************************************************/
 309   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 310   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 311   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 312   1                              | CKCON0_T1M__SYSCLK;
 313   1              // [CKCON0 - Clock Control 0]$
 314   1      
 315   1              // $[CKCON1 - Clock Control 1]
 316   1              // [CKCON1 - Clock Control 1]$
 317   1      
 318   1              // $[TMOD - Timer 0/1 Mode]
 319   1              /***********************************************************************
 320   1               - Mode 1, 16-bit Counter/Timer
 321   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 322   1               - Timer Mode
 323   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 324   1               - Timer Mode
 325   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 326   1               ***********************************************************************/
 327   1              TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 328   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 329   1              // [TMOD - Timer 0/1 Mode]$
 330   1      
 331   1              // $[TCON - Timer 0/1 Control]
 332   1              /***********************************************************************
 333   1               - Start Timer 0 running
 334   1               ***********************************************************************/
 335   1              TCON |= TCON_TR0__RUN;
 336   1              // [TCON - Timer 0/1 Control]$
 337   1      
 338   1      }
 339          
 340          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 341   1              // $[P0 - Port 0 Pin Latch]
 342   1              // [P0 - Port 0 Pin Latch]$
 343   1      
 344   1              // $[P0MDOUT - Port 0 Output Mode]
 345   1              /***********************************************************************
 346   1               - P0.0 output is open-drain
 347   1               - P0.1 output is open-drain
 348   1               - P0.2 output is open-drain
 349   1               - P0.3 output is open-drain
 350   1               - P0.4 output is open-drain
 351   1               - P0.5 output is open-drain
 352   1               - P0.6 output is push-pull
 353   1               - P0.7 output is open-drain
 354   1               ***********************************************************************/
 355   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 356   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 357   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 358   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 359   1              // [P0MDOUT - Port 0 Output Mode]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 7   

 360   1      
 361   1              // $[P0MDIN - Port 0 Input Mode]
 362   1              // [P0MDIN - Port 0 Input Mode]$
 363   1      
 364   1              // $[P0SKIP - Port 0 Skip]
 365   1              /***********************************************************************
 366   1               - P0.0 pin is skipped by the crossbar
 367   1               - P0.1 pin is skipped by the crossbar
 368   1               - P0.2 pin is skipped by the crossbar
 369   1               - P0.3 pin is skipped by the crossbar
 370   1               - P0.4 pin is skipped by the crossbar
 371   1               - P0.5 pin is skipped by the crossbar
 372   1               - P0.6 pin is not skipped by the crossbar
 373   1               - P0.7 pin is not skipped by the crossbar
 374   1               ***********************************************************************/
 375   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 376   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 377   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 378   1              // [P0SKIP - Port 0 Skip]$
 379   1      
 380   1              // $[P0MASK - Port 0 Mask]
 381   1              /***********************************************************************
 382   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 383   1               event
 384   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 385   1               event
 386   1               - P0.2 pin logic value is compared to P0MAT.2
 387   1               - P0.3 pin logic value is compared to P0MAT.3
 388   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 389   1               event
 390   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 391   1               event
 392   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 393   1               event
 394   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 395   1               event
 396   1               ***********************************************************************/
 397   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 398   1                              | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 399   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 400   1              // [P0MASK - Port 0 Mask]$
 401   1      
 402   1              // $[P0MAT - Port 0 Match]
 403   1              // [P0MAT - Port 0 Match]$
 404   1      
 405   1      }
 406          
 407          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 408   1              // $[P1 - Port 1 Pin Latch]
 409   1              // [P1 - Port 1 Pin Latch]$
 410   1      
 411   1              // $[P1MDOUT - Port 1 Output Mode]
 412   1              /***********************************************************************
 413   1               - P1.0 output is push-pull
 414   1               - P1.1 output is push-pull
 415   1               - P1.2 output is open-drain
 416   1               - P1.3 output is open-drain
 417   1               - P1.4 output is push-pull
 418   1               - P1.5 output is push-pull
 419   1               - P1.6 output is push-pull
 420   1               - P1.7 output is open-drain
 421   1               ***********************************************************************/
 422   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 8   

 423   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 424   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 425   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 426   1              // [P1MDOUT - Port 1 Output Mode]$
 427   1      
 428   1              // $[P1MDIN - Port 1 Input Mode]
 429   1              /***********************************************************************
 430   1               - P1.0 pin is configured for digital mode
 431   1               - P1.1 pin is configured for digital mode
 432   1               - P1.2 pin is configured for digital mode
 433   1               - P1.3 pin is configured for digital mode
 434   1               - P1.4 pin is configured for digital mode
 435   1               - P1.5 pin is configured for digital mode
 436   1               - P1.6 pin is configured for digital mode
 437   1               - P1.7 pin is configured for analog mode
 438   1               ***********************************************************************/
 439   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 440   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 441   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 442   1              // [P1MDIN - Port 1 Input Mode]$
 443   1      
 444   1              // $[P1SKIP - Port 1 Skip]
 445   1              /***********************************************************************
 446   1               - P1.0 pin is not skipped by the crossbar
 447   1               - P1.1 pin is skipped by the crossbar
 448   1               - P1.2 pin is skipped by the crossbar
 449   1               - P1.3 pin is skipped by the crossbar
 450   1               - P1.4 pin is skipped by the crossbar
 451   1               - P1.5 pin is skipped by the crossbar
 452   1               - P1.6 pin is skipped by the crossbar
 453   1               - P1.7 pin is skipped by the crossbar
 454   1               ***********************************************************************/
 455   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 456   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 457   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 458   1              // [P1SKIP - Port 1 Skip]$
 459   1      
 460   1              // $[P1MASK - Port 1 Mask]
 461   1              // [P1MASK - Port 1 Mask]$
 462   1      
 463   1              // $[P1MAT - Port 1 Match]
 464   1              // [P1MAT - Port 1 Match]$
 465   1      
 466   1      }
 467          
 468          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 469   1              // $[P2 - Port 2 Pin Latch]
 470   1              // [P2 - Port 2 Pin Latch]$
 471   1      
 472   1              // $[P2MDOUT - Port 2 Output Mode]
 473   1              /***********************************************************************
 474   1               - P2.0 output is open-drain
 475   1               - P2.1 output is open-drain
 476   1               - P2.2 output is open-drain
 477   1               - P2.3 output is open-drain
 478   1               - P2.4 output is open-drain
 479   1               - P2.5 output is open-drain
 480   1               - P2.6 output is push-pull
 481   1               ***********************************************************************/
 482   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 483   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__OPEN_DRAIN
 484   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 485   1                              | P2MDOUT_B6__PUSH_PULL;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 9   

 486   1              // [P2MDOUT - Port 2 Output Mode]$
 487   1      
 488   1              // $[P2MDIN - Port 2 Input Mode]
 489   1              // [P2MDIN - Port 2 Input Mode]$
 490   1      
 491   1              // $[P2SKIP - Port 2 Skip]
 492   1              // [P2SKIP - Port 2 Skip]$
 493   1      
 494   1              // $[P2MASK - Port 2 Mask]
 495   1              // [P2MASK - Port 2 Mask]$
 496   1      
 497   1              // $[P2MAT - Port 2 Match]
 498   1              // [P2MAT - Port 2 Match]$
 499   1      
 500   1      }
 501          
 502          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 503   1              // $[P3 - Port 3 Pin Latch]
 504   1              // [P3 - Port 3 Pin Latch]$
 505   1      
 506   1              // $[P3MDOUT - Port 3 Output Mode]
 507   1              /*
 508   1               // B0 (Port 3 Bit 0 Output Mode) = OPEN_DRAIN (P3.0 output is open-
 509   1               //     drain.)
 510   1               // B1 (Port 3 Bit 1 Output Mode) = OPEN_DRAIN (P3.1 output is open-
 511   1               //     drain.)
 512   1               // B2 (Port 3 Bit 2 Output Mode) = OPEN_DRAIN (P3.2 output is open-
 513   1               //     drain.)
 514   1               // B3 (Port 3 Bit 3 Output Mode) = OPEN_DRAIN (P3.3 output is open-
 515   1               //     drain.)
 516   1               // B4 (Port 3 Bit 4 Output Mode) = PUSH_PULL (P3.4 output is push-pull.)
 517   1               // B7 (Port 3 Bit 7 Output Mode) = OPEN_DRAIN (P3.7 output is open-
 518   1               //     drain.)
 519   1               */
 520   1              SFRPAGE = 0x20;
 521   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 522   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
 523   1                              | P3MDOUT_B4__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 524   1              // [P3MDOUT - Port 3 Output Mode]$
 525   1      
 526   1              // $[P3MDIN - Port 3 Input Mode]
 527   1              // [P3MDIN - Port 3 Input Mode]$
 528   1      
 529   1      }
 530          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 531   1              // $[ADC0CN2 - ADC0 Control 2]
 532   1              /***********************************************************************
 533   1               - ADC0 conversion initiated on overflow of Timer 0
 534   1               - The ADC accumulator is over-written with the results of any conversion
 535   1               ***********************************************************************/
 536   1              ADC0CN2 = ADC0CN2_ADCM__TIMER0 | ADC0CN2_PACEN__PAC_DISABLED;
 537   1              // [ADC0CN2 - ADC0 Control 2]$
 538   1      
 539   1              // $[ADC0CN1 - ADC0 Control 1]
 540   1              // [ADC0CN1 - ADC0 Control 1]$
 541   1      
 542   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 543   1              /***********************************************************************
 544   1               - Select ADC0.13
 545   1               ***********************************************************************/
 546   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 547   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 548   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 10  

 549   1              // $[ADC0CF2 - ADC0 Power Control]
 550   1              /***********************************************************************
 551   1               - The ADC0 ground reference is the GND pin
 552   1               - The ADC0 voltage reference is the VDD pin
 553   1               - Power Up Delay Time = 0x1F
 554   1               ***********************************************************************/
 555   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 556   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 557   1              // [ADC0CF2 - ADC0 Power Control]$
 558   1      
 559   1              // $[ADC0CF0 - ADC0 Configuration]
 560   1              /***********************************************************************
 561   1               - ADCCLK = SYSCLK
 562   1               - SAR Clock Divider = 0x01
 563   1               ***********************************************************************/
 564   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 565   1              // [ADC0CF0 - ADC0 Configuration]$
 566   1      
 567   1              // $[ADC0CF1 - ADC0 Configuration]
 568   1              /***********************************************************************
 569   1               - Enable low power mode
 570   1               - Conversion Tracking Time = 0x01
 571   1               ***********************************************************************/
 572   1              ADC0CF1 = ADC0CF1_ADLPM__LP_ENABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 573   1              // [ADC0CF1 - ADC0 Configuration]$
 574   1      
 575   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 576   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 577   1      
 578   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 579   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 580   1      
 581   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 582   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 583   1      
 584   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 585   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 586   1      
 587   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 588   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 589   1      
 590   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 591   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 592   1      
 593   1              // $[ADC0CN0 - ADC0 Control 0]
 594   1              /***********************************************************************
 595   1               - Enable ADC0 
 596   1               ***********************************************************************/
 597   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 598   1              // [ADC0CN0 - ADC0 Control 0]$
 599   1      
 600   1      }
 601          
 602          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
 603   1              // $[PCA Off]
 604   1              PCA0CN0_CR = PCA0CN0_CR__STOP;
 605   1              // [PCA Off]$
 606   1      
 607   1              // $[PCA0MD - PCA Mode]
 608   1              // [PCA0MD - PCA Mode]$
 609   1      
 610   1              // $[PCA0CENT - PCA Center Alignment Enable]
 611   1              // [PCA0CENT - PCA Center Alignment Enable]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 11  

 612   1      
 613   1              // $[PCA0CLR - PCA Comparator Clear Control]
 614   1              // [PCA0CLR - PCA Comparator Clear Control]$
 615   1      
 616   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 617   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 618   1      
 619   1              // $[PCA0H - PCA Counter/Timer High Byte]
 620   1              // [PCA0H - PCA Counter/Timer High Byte]$
 621   1      
 622   1              // $[PCA0POL - PCA Output Polarity]
 623   1              // [PCA0POL - PCA Output Polarity]$
 624   1      
 625   1              // $[PCA0PWM - PCA PWM Configuration]
 626   1              // [PCA0PWM - PCA PWM Configuration]$
 627   1      
 628   1              // $[PCA On]
 629   1              PCA0CN0_CR = PCA0CN0_CR__RUN;
 630   1              // [PCA On]$
 631   1      
 632   1      }
 633          
 634          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 635   1              // $[PCA0 Settings Save]
 636   1              // Select Capture/Compare register)
 637   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 638   1              // [PCA0 Settings Save]$
 639   1      
 640   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 641   1              /***********************************************************************
 642   1               - Disable negative edge capture
 643   1               - Disable CCF0 interrupts
 644   1               - Enable match function
 645   1               - 8 to 11-bit PWM selected
 646   1               - Disable positive edge capture
 647   1               - Enable comparator function
 648   1               - Enable PWM function
 649   1               - Disable toggle function
 650   1               ***********************************************************************/
 651   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 652   1                              | PCA0CPM0_MAT__ENABLED | PCA0CPM0_PWM16__8_BIT
 653   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 654   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 655   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 656   1      
 657   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 658   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 659   1      
 660   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 661   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 662   1      
 663   1              // $[Auto-reload]
 664   1              // [Auto-reload]$
 665   1      
 666   1              // $[PCA0 Settings Restore]
 667   1              // [PCA0 Settings Restore]$
 668   1      
 669   1      }
 670          
 671          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 672   1              // $[PCA0 Settings Save]
 673   1              // Select Capture/Compare register)
 674   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 12  

 675   1              // [PCA0 Settings Save]$
 676   1      
 677   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 678   1              /***********************************************************************
 679   1               - Disable negative edge capture
 680   1               - Disable CCF1 interrupts
 681   1               - Enable match function
 682   1               - 8 to 11-bit PWM selected
 683   1               - Disable positive edge capture
 684   1               - Enable comparator function
 685   1               - Enable PWM function
 686   1               - Disable toggle function
 687   1               ***********************************************************************/
 688   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 689   1                              | PCA0CPM1_MAT__ENABLED | PCA0CPM1_PWM16__8_BIT
 690   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 691   1                              | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 692   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 693   1      
 694   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 695   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 696   1      
 697   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 698   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 699   1      
 700   1              // $[Auto-reload]
 701   1              // [Auto-reload]$
 702   1      
 703   1              // $[PCA0 Settings Restore]
 704   1              // [PCA0 Settings Restore]$
 705   1      
 706   1      }
 707          
 708          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
 709   1              // $[PCA0 Settings Save]
 710   1              // Select Capture/Compare register)
 711   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 712   1              // [PCA0 Settings Save]$
 713   1      
 714   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 715   1              /***********************************************************************
 716   1               - Disable negative edge capture
 717   1               - Disable CCF2 interrupts
 718   1               - Enable match function
 719   1               - 8 to 11-bit PWM selected
 720   1               - Disable positive edge capture
 721   1               - Enable comparator function
 722   1               - Enable PWM function
 723   1               - Disable toggle function
 724   1               ***********************************************************************/
 725   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 726   1                              | PCA0CPM2_MAT__ENABLED | PCA0CPM2_PWM16__8_BIT
 727   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__ENABLED
 728   1                              | PCA0CPM2_PWM__ENABLED | PCA0CPM2_TOG__DISABLED;
 729   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 730   1      
 731   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 732   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 733   1      
 734   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 735   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 736   1      
 737   1              // $[Auto-reload]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/23/2017 17:22:30 PAGE 13  

 738   1              // [Auto-reload]$
 739   1      
 740   1              // $[PCA0 Settings Restore]
 741   1              // [PCA0 Settings Restore]$
 742   1      
 743   1      }
 744          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    228    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
